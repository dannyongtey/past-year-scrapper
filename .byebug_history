continue
datas
exit
datas.first.body
datas
exit
puts "process done"
datas
exit
a
a << data
a = []
a << data
data
exit
datas
data
continue
haha.path
haha = Tempfile.new("huehue")
t.path
t.class
t.size
t.methods
t.size_in_bytes
t.size
t
exit
stud_pswd
stud_id
agent.cookie_jar
agent.page.title == "Off-campus Login"
agent.page.title
exit
agent.page.form.submit
agent.page.form.pass="abc123456"
agent.page.form.user="1161102454"
agent.page.title
agent.page.form
agent.page.link
agent.page
continue
agent.page.links
agent.page.title
agent.page
continue
stud_pswd
stud_pswl
stud_password
stud_id
continue
agent.get "http://library.mmu.edu.my.proxyvlib.mmu.edu.my/library2/diglib/exam_col/resindex.php?df1=title&rt=TSN%201101&ph1=%25&cmp1=&df2=&ra=&ph2=&cmp2=&ri=&rp=&rf=&ry1=&ry2=&df3=title&std=ASC&page=0&limit=50"
agent.page.title
update_or_initialize_cookie(agent)
update_or_initialize_cookie
update_or_initialize_cookies
agent.page.form
agent.page.title
agent.page
agent
continue
name_and_id[:ids]
name_and_id[:id]
name_and_id[id]
query
exit
params.each {|f| puts f}
params.to_unsafe_h.to_h
params.to_unsafe_h.pop
params.to_unsafe_h
params.to_h
params[:computer]
params
params.to_h
params.pop
params
subject_hash
exit
params
params.each { |f,g| puts f,g }
params.each { |f| puts f }
params.each
params.first
params
exit
params
exit
params[:sub_id]
params
continue
zos.print data
zos.print
zos
puts a
a = "haha"
puts a
puts data
puts "haha"
zos.print
zos
continue
Zip::OutputStream
Zip.OutputStream
Zip
continue
exit
subject_params[:zip] == true
subject_params[:zip]== false
subject_params[:zip]== true
if subject_params[:zip]== true
subject_params[:zip].to_bool
subject_params[:zip]
exit
subject_params
subject_params.methods
subject_params.query
subject_params[:zip]
subject_params
exit
continue
dl_link
id
continue
subject_params
id
continue
@subject_hash
continue
@subject_hash
@id_hash
continue
@id_hash
continue
agent.page.title
agent.page
@id_hash
continue
pattern.match("TSN111")
pattern.match("TSN1111")
pattern.match("TSN")
pattern.match?("TSN")
pattern
pattern.match("TSN1101")
pattern.match("TSN 1101")
pattern.match("TSN1101")
continue
temp_array.each do |item|
temp_array
